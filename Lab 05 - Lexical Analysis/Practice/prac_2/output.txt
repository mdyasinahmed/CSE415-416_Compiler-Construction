int -> KEYWORD_INT
main -> FUNC_MAIN
( -> LEFT_PAREN
) -> RIGHT_PAREN
{ -> LEFT_BRACE
float -> KEYWORD_FLOAT
b -> IDENTIFIER
= -> ASSIGN
2.5 -> FLOAT_LITERAL
; -> SEMICOLON
Int -> IDENTIFIER
a -> IDENTIFIER
= -> ASSIGN
10 -> INT_LITERAL
; -> SEMICOLON
char -> KEYWORD_CHAR
c -> IDENTIFIER
= -> ASSIGN
‘a’ -> CHAR_LITERAL
; -> SEMICOLON
Int -> IDENTIFIER
aq -> IDENTIFIER
; -> SEMICOLON
double -> KEYWORD_DOUBLE
exp -> IDENTIFIER
= -> ASSIGN
-10.9e-27 -> EXPONENTIAL_LITERAL
; -> SEMICOLON
for -> KEYWORD_FOR
( -> LEFT_PAREN
int -> KEYWORD_INT
i -> IDENTIFIER
= -> ASSIGN
0 -> INT_LITERAL
; -> SEMICOLON
i -> IDENTIFIER
<= -> REL_OP
10 -> INT_LITERAL
; -> SEMICOLON
i -> IDENTIFIER
++ -> INCREMENT
) -> RIGHT_PAREN
{ -> LEFT_BRACE
printf -> FUNC_PRINTF
( -> LEFT_PAREN
“The Number is : %d”,i);
   scanf(“%d” -> CHAR_LITERAL
, -> COMMA
& -> ADDRESS_OF
aq -> IDENTIFIER
) -> RIGHT_PAREN
; -> SEMICOLON
} -> RIGHT_BRACE
return -> KEYWORD_RETURN
0 -> INT_LITERAL
; -> SEMICOLON
} -> RIGHT_BRACE
